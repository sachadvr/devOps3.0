name: Remix Pipelines

on:
  push:
    branches:
      - main
      - 'feature/*'
  pull_request:
    branches:
      - main

jobs:
  common-setup:
    name: Common Pipeline Setup
    runs-on: ubuntu-latest
    outputs:
      cache-hit: ${{ steps.cache-deps.outputs.cache-hit }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install Dependencies
        id: npm-install
        run: npm install

  lint:
    name: Run Linter
    runs-on: ubuntu-latest
    needs: common-setup
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Run Linter
        run: npm run lint

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: common-setup
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Run Tests
        run: npm run test

  build:
    name: Build Project
    runs-on: ubuntu-latest
    needs: common-setup
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Build Project
        run: npm run build

  format:
    name: Check Formatting
    runs-on: ubuntu-latest
    needs: common-setup
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Check Formatting
        run: npm run format:check

  deploy:
    name: Deploy to Docker Hub
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker Image
        run: docker build -t sachadvr/remix-app .

      - name: Push Docker Image
        run: docker push sachadvr/remix-app
