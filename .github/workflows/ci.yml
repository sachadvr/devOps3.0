name: Remix Pipelines

on:
  push:
    branches:
      - main
      - 'feature/*'
  pull_request:
    branches:
      - main

jobs:
  common-setup:
    name: Common Pipeline Setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Run Common Setup
        uses: ./.github/actions/common
        with:
          node-version: '22'
          cache: 'yarn'

  lint:
    name: Run Linter
    runs-on: ubuntu-latest
    needs: common-setup
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Run Common Setup
        uses: ./.github/actions/common
        with:
          node-version: '22'
          cache: 'yarn'

      - name: Run Linter
        run: yarn run lint

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: common-setup
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Run Common Setup
        uses: ./.github/actions/common
        with:
          node-version: '22'
          cache: 'yarn'

      - name: Run Tests
        run: yarn run test

  build:
    name: Build Project
    runs-on: ubuntu-latest
    needs: common-setup
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Run Common Setup
        uses: ./.github/actions/common
        with:
          node-version: '22'
          cache: 'yarn'

      - name: Build Project
        run: yarn run build

  format:
    name: Check Formatting
    runs-on: ubuntu-latest
    needs: common-setup
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Run Common Setup
        uses: ./.github/actions/common
        with:
          node-version: '22'
          cache: 'yarn'

      - name: Check Formatting
        run: yarn run format:check
  docs:
    name: Build Documentation
    runs-on: ubuntu-latest
    needs: common-setup
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install MkDocs
        run: apt-get update && apt-get install -y python3-pip && pip3 install mkdocs mkdocs-material

      - name: Run MkDocs
        run: mkdocs build

      - name: Setup Pages for GitHub Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact for GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'site'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
  deploy:
    if: github.ref == 'refs/heads/main'
    name: Deploy to Docker Hub
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Run Common Setup
        uses: ./.github/actions/common
        with:
          node-version: '22'
          cache: 'yarn'

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker Image
        run: docker build -t sachadvr/remix-app .

      - name: Push Docker Image
        run: docker push sachadvr/remix-app
